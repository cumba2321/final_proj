rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to get user role
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }
    
    // Users collection - users can read/write their own document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Classes collection - authenticated users can read classes they're enrolled in
    match /classes/{classId} {
      // Basic read for authenticated users
      allow read: if request.auth != null;

      // Create: only allow authenticated users to create a class that they claim to have created
      allow create: if request.auth != null && request.resource.data.createdBy == request.auth.uid;

      // Full update/delete: allowed for the class owner (createdBy) or an instructor role
      allow update, delete: if request.auth != null && (
        resource.data.createdBy == request.auth.uid ||
        getUserRole(request.auth.uid) == 'instructor'
      );

      // Simplified rule: Allow authenticated students to join/leave classes
      // by updating students array and studentCount
      allow update: if request.auth != null && (
        request.resource.data.keys().hasAny(['students', 'studentCount'])
      );

      // Assignments subcollection
      match /assignments/{assignmentId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null && 
          getUserRole(request.auth.uid) == 'instructor';
        allow update, delete: if request.auth != null && 
          (resource.data.createdBy == request.auth.uid || 
           getUserRole(request.auth.uid) == 'instructor');
      }
      
      // Announcements subcollection
      match /announcements/{announcementId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null && 
          getUserRole(request.auth.uid) == 'instructor';
        allow update, delete: if request.auth != null && 
          (resource.data.createdBy == request.auth.uid || 
           getUserRole(request.auth.uid) == 'instructor');
      }
      
      // Submissions subcollection (for assignments)
      match /submissions/{submissionId} {
        allow read: if request.auth != null;
        allow create, update: if request.auth != null && 
          (resource == null || resource.data.studentId == request.auth.uid);
        allow delete: if request.auth != null && 
          (resource.data.studentId == request.auth.uid || 
           getUserRole(request.auth.uid) == 'instructor');
      }
      
      // Posts subcollection (for class discussions)
      match /posts/{postId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null && 
          request.resource.data.authorId == request.auth.uid;
        allow update, delete: if request.auth != null && 
          (resource.data.authorId == request.auth.uid || 
           getUserRole(request.auth.uid) == 'instructor');
      }
    }
    
    // Allow read access to any authenticated user for now (can be more restrictive)
    match /{document=**} {
      allow read: if request.auth != null;
    }
  }
}
