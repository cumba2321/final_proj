// Firestore Security Rules for ClassWall with Classes Support
// Copy these rules to your Firebase Console > Firestore Database > Rules

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - users can read/write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Classes collection - simplified permissions for better functionality
    match /classes/{classId} {
      // Anyone authenticated can read classes (needed for joining by code)
      allow read: if request.auth != null;
      
      // Only authenticated users can create classes
      allow create: if request.auth != null && 
                    request.auth.uid == request.resource.data.createdBy;
      
      // Allow updates for:
      // 1. Class creators (instructors) can update their classes
      // 2. Any authenticated user can update students array and studentCount (for join/leave)
      allow update: if request.auth != null && (
        // Instructor can update their own class
        request.auth.uid == resource.data.createdBy ||
        // Any authenticated user can modify students array and studentCount
        // This allows both joining and leaving classes
        (request.resource.data.keys().hasOnly(['students', 'studentCount']) ||
         request.resource.data.keys().hasOnly(['students']) ||
         request.resource.data.keys().hasOnly(['studentCount']))
      );
      
      // Only the creator can delete the class
      allow delete: if request.auth != null && 
                    request.auth.uid == resource.data.createdBy;
    }
    
    // ClassWall posts - authenticated users can read all, create posts, anyone can like/comment
    match /classWall/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null; // Anyone can create posts
      allow update: if request.auth != null; // Anyone can update (for likes/comments count)
      allow delete: if request.auth != null && 
                    request.auth.uid == resource.data.userId; // Only author can delete
      
      // Comments subcollection - any authenticated user can comment on any post
      match /comments/{commentId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null; // Anyone can comment on any post
        allow update, delete: if request.auth != null; // Anyone can edit/delete any comment
      }
    }
    
    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}